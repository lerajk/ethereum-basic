pragma solidity ^0.4.14;

import "./StandardToken.sol";

contract HumanToken is StandardToken {

	string public name;
	uint8 public decimals;
	string public symbol;
	string public version = 'H0.1';

	function HumanToken(

		uint256 _intitalAmount,
		string _tokenName,
		uint _decimalUnits,
		string _tokenSymbol
		) {

		balances[msg.sender] = _intitalAmount;
		totalSupply = _intitalAmount;
		name = _tokenName;
		decimals = _decimalUnits;
		symbol = _tokenSymbol;
	}

	function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success){
		allowed[msg.sender][_spender] = _value;
		Approval(msg.sender, _spender, _value);

        require(_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData));
        return true;
        
	}


} //contract ends 